{"version":3,"sources":["webpack://cc-libraries-api/./src/pages/integrate/tutorials/quick-start-curl/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+QAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,oBADR,sBAGA,mEACA,+MACA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,kBADZ,sLAOL,8GACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,wGAUL,+GAAgG,uBAAYA,WAAW,KAAvB,OAAhG,sFAAqO,uBAAYA,WAAW,KAAvB,OAArO,+IACA,eACE,GAAM,mBADR,oBAGA,oBACE,eAAIA,WAAW,MAAf,uBAEF,eACE,GAAM,iBADR,kBAGA,mBAAG,mBAAQA,WAAW,KAAnB,eACH,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,8CADQ,2CAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sDADQ,0CAItB,mBAAG,mBAAQA,WAAW,KAAnB,YACH,oBACE,eAAIA,WAAW,MAAf,wDACA,eAAIA,WAAW,MAAf,wGAEF,eACE,GAAM,qBADR,sBAGA,4BACE,cAAGA,WAAW,eAAa,mBAAQA,WAAW,KAAnB,QAA3B,iDACuC,cAAGA,WAAW,IACjD,KAAQ,iFAD2B,aADvC,OAKF,eACE,GAAM,sCADR,wCAGA,6BAAc,cAAGA,WAAW,IACxB,KAAQ,8CADE,yCAAd,8EAGA,kGAAmF,uBAAYA,WAAW,KAAvB,MAAnF,+CAAgL,uBAAYA,WAAW,KAAvB,OAAhL,uBACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,sLAOL,sIACA,eACE,GAAM,iBADR,mBAGA,0CAA2B,uBAAYA,WAAW,KAAvB,OAA3B,oBAA8F,uBAAYA,WAAW,KAAvB,cAA9F,kKACA,kEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,wGAUL,mCAAoB,cAAGA,WAAW,IAC9B,KAAQ,0BADQ,kBAApB,sDAOJJ,EAAWK,gBAAiB","file":"component---src-pages-integrate-tutorials-quick-start-curl-index-md-c85c2114493b6e9b82b3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-libraries-api/cc-libraries-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quick-start-curl\"\n    }}>{`Quick Start: cURL`}</h1>\n    <p>{`Welcome to the Creative Cloud Libraries API!`}</p>\n    <p>{`In this Quick Start tutorial, we'll be walking you towards making your first API call via the cURL command-line tool. By the end you'll have constructed a command that looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --location --request GET \\\\\n  https://cc-libraries.adobe.io/api/v1/libraries \\\\\n  -H 'x-api-key: <CLIENT_ID_HERE>' \\\\\n  -H 'Authorization: Bearer <ACCESS_TOKEN_HERE>'\n`}</code></pre>\n    <p>{`This API call will return information about the libraries you have stored in Libraries:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"total_count\": 2,\n  \"libraries\": [\n    /* Your libraries here */\n  ],\n  \"_links\": {}\n}\n`}</code></pre>\n    <p>{`By starting with this basic cURL command, you'll have an idea of what's required to make `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` requests to the Libraries API. From there, you can play with the command to make `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` requests to different endpoints from the command line, or translate these concepts to your environment of choice, like Node.js or Python.`}</p>\n    <h2 {...{\n      \"id\": \"technology-used\"\n    }}>{`Technology Used`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Command-line cURL`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p><strong parentName=\"p\">{`Tutorials`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./how-to-get-your-developer-credentials.md\"\n        }}>{`How to get your developer credentials`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tutorials/how-to-get-access-tokens-with-oauth.md\"\n        }}>{`How to get access tokens with OAuth`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Assets`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`At least one Library associated with your Adobe ID.`}</li>\n      <li parentName=\"ul\">{`A terminal application for a UNIX-based system (like macOS, Linux, or Windows Subsystem for Linux)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"development-steps\"\n    }}>{`Development Steps`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nComplete code for this plugin can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/cc-libraries-api/code-samples/tree/master/quick-start-curl\"\n        }}>{`on GitHub`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"1-create-and-run-your-curl-command\"\n    }}>{`1. Create and run your cURL command`}</h3>\n    <p>{`In our `}<a parentName=\"p\" {...{\n        \"href\": \"../../setup/developer-credentials/index.md\"\n      }}>{`How to get your developer credentials`}</a>{` tutorial, we showed you how to get your Client ID and user access token.`}</p>\n    <p>{`You can take both of those values and add them to their respective headers (`}<inlineCode parentName=\"p\">{`-H`}</inlineCode>{`) below. Don't include the angle brackets (`}<inlineCode parentName=\"p\">{`< >`}</inlineCode>{`) in your command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --location --request GET \\\\\n  https://cc-libraries.adobe.io/api/v1/libraries \\\\\n  -H 'x-api-key: <CLIENT_ID_HERE>' \\\\\n  -H 'Authorization: Bearer <ACCESS_TOKEN_HERE>'\n`}</code></pre>\n    <p>{`You're ready to make your first API call! Just paste this command into your terminal application and hit enter.`}</p>\n    <h3 {...{\n      \"id\": \"2-get-results\"\n    }}>{`2. Get results`}</h3>\n    <p>{`Since you've sent a `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` request to the `}<inlineCode parentName=\"p\">{`/libraries`}</inlineCode>{` endpoint, you can probably guess that you're going to get back information about the libraries you have stored in Creative Cloud Librariesâ€”and you're right!`}</p>\n    <p>{`The response will look something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"total_count\": 2,\n  \"libraries\": [\n    /* Your libraries here */\n  ],\n  \"_links\": {}\n}\n`}</code></pre>\n    <p>{`Always check `}<a parentName=\"p\" {...{\n        \"href\": \"/cc-libraries-api/api/\"\n      }}>{`the references`}</a>{` for the full details on any request or response.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}