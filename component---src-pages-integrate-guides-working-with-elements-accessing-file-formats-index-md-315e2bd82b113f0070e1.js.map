{"version":3,"sources":["webpack:///./src/pages/integrate/guides/working-with-elements/accessing-file-formats/index.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"mappings":"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","file":"component---src-pages-integrate-guides-working-with-elements-accessing-file-formats-index-md-315e2bd82b113f0070e1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-libraries-api/cc-libraries-api/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"accessing-different-file-formats-with-representations\"\n    }}>{`Accessing Different File Formats with Representations`}</h1>\n    <p>{`An element in a Creative Cloud Library can include one or more formats that are accessed as `}<em parentName=\"p\">{`representations`}</em>{` using the API. As an example, an XD Component can have three different representations; A static PNG file that provides a bitmap version of what the component looks like, an SVG file that has vector information about the component, and a JSON representation of the component that includes a variety of properties included in the component.`}</p>\n    <p>{`Representations are added when an element is created and can be added/modified later. By default, all elements have a static representation in PNG format in addition to whatever the native format of the element is. For instance, a Photoshop object that is added as a Graphics element will include the the source file as a representation (`}<inlineCode parentName=\"p\">{`.psd`}</inlineCode>{`) as well as a static `}<inlineCode parentName=\"p\">{`.png`}</inlineCode>{` representation.`}</p>\n    <h2 {...{\n      \"id\": \"getting-thumbnails-and-full-resolution-pngs-using-renditions\"\n    }}>{`Getting Thumbnails and Full Resolution PNGs using Renditions`}</h2>\n    <p>{`Separate from `}<inlineCode parentName=\"p\">{`representations`}</inlineCode>{`, all graphical elements in a Library include a static PNG `}<inlineCode parentName=\"p\">{`rendition`}</inlineCode>{` that is created when the element is added. This `}<inlineCode parentName=\"p\">{`rendition`}</inlineCode>{` can be an easy way to get PNG of an graphical element that doesn't require the use of renditions. `}</p>\n    <p>{`Each Library Element includes a `}<inlineCode parentName=\"p\">{`thumbnail`}</inlineCode>{` property which has a `}<inlineCode parentName=\"p\">{`rendition`}</inlineCode>{` link that can be used to access the static PNG for an element. It looks something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"thumbnail\": {\n    \"type\": \"href\",\n    \"rendition\": \"https://cc-api-storage.adobe.io/assets/adobe-libraries/<libraryId>/<UUID of the asset>/:rendition;size=200\"\n}\n`}</code></pre>\n    <p>{`This information is also returned in the `}<inlineCode parentName=\"p\">{`http://ns.adobe.com/melville/rel/rendition`}</inlineCode>{` object of the `}<inlineCode parentName=\"p\">{`_links`}</inlineCode>{` array on an element. `}</p>\n    <p>{`When calling that API, the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` value can be omitted to return a full-sized rendition or modified which will return a PNG where the longest side is equal to the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` specified. `}</p>\n    <p>{`The following curl call can be used to access a rendition whose longest size will be 400 pixels:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --location --request GET 'https://cc-api-storage.adobe.io/assets/adobe-libraries/<libraryId>/<UUID of the asset>/:rendition;size=400' \\\\\n--header 'x-api-key: <client ID>' \\\\\n--header 'Authorization: Bearer <access token>'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adobe-product-compatibility-for-representations\"\n    }}>{`Adobe Product Compatibility for Representations`}</h2>\n    <p>{`Each Adobe product has specific rules for what representations they include when an element is uploaded.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Product`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Element Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Representation Formats`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Photoshop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Graphic`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`PSD, PNG`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Illustrator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Graphic`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`AI, PNG`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`XD`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Graphic`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`XD`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`JSON (AGC), SVG, PNG`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"getting-representations\"\n    }}>{`Getting Representations`}</h2>\n    <p>{`To get a list of all the representations for an element use the `}<inlineCode parentName=\"p\">{`?selector=representations`}</inlineCode>{` on any element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --location --request GET 'https://cc-libraries.adobe.io/api/v1/libraries/{library_id}/elements/{element_id}?selector=representations' \\\\\n--header 'x-api-key: {api_key}' \\\\\n--header 'Authorization: Bearer {access_token}'\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`IMPORTANT`}</strong>{` Using selectors can impact performance so use them sparingly and only when they are the only option for getting the required data.`}</p>\n    <p>{`That returns a JSON object that includes some basic metadata about the element as well as an array of any representations. Each representation is made up of an asset (usually a file) and has the following properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The unique ID of the representation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The mime type of the asset that defines the representation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`path`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The file name of the representation's asset`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`is_full_size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean property for whether the specific assets is a full sized representation of the element`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The width (in pixels) of the representation's asset`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`height`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The height (in pixels) of the representation's asset`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`version`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The version of the representation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`md5`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The MD5 hash of the representation's asset`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`_links`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` An array of links to other properties of the representation's asset`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`etag`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The etag of the representation's asset`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`storage_href`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` The location of the file that defines the representation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`is_preferred_thumbnail`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean property for Whether the representation is used as the thubmnail of the element`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`(For file-based representations)`}</em>{` Name of the representation's asset`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"downloading-and-accessing-representations\"\n    }}>{`Downloading and Accessing Representations`}</h2>\n    <p>{`For non-file representations, the main information will be captured in a JSON object. For instance, representations of color elements will have a specific `}<inlineCode parentName=\"p\">{`color#data`}</inlineCode>{` property that includes the `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` and corresponding color `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`.`}</p>\n    <p>{`For file-based representations, the `}<inlineCode parentName=\"p\">{`storage_href`}</inlineCode>{` property contains the path to the file that defines that representation. For many representations, that will be an image file, but in the case of components and other representations, it may point to the JSON object that defines that specific representation format.`}</p>\n    <p>{`To access the representation's file, use a `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` request with the same headers on that URL:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --location --request GET '{storage_href}' \\\\\n--header 'x-api-key: {api_key}' \\\\\n--header 'Authorization: Bearer {access_token}'\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: The URL can also be accessed by following the `}<inlineCode parentName=\"em\">{`http://ns.adobe.com/melville/rel/path`}</inlineCode>{` property of the `}<inlineCode parentName=\"em\">{`_links`}</inlineCode>{` array on the representation.`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}