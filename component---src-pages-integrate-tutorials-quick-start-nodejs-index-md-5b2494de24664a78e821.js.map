{"version":3,"sources":["webpack:///./src/pages/integrate/tutorials/quick-start-nodejs/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-integrate-tutorials-quick-start-nodejs-index-md-5b2494de24664a78e821.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cc-libraries-api/cc-libraries-api/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quick-start-nodejs\"\n    }}>{`Quick Start: Node.js`}</h1>\n    <p>{`Welcome to the CC Libraries API!`}</p>\n    <p>{`In this Quick Start tutorial, we'll be walking you towards making your first API call from a Node.js script. By the end you'll have a self-invoking function that makes a call to the CC Libraries API when you run the script.`}</p>\n    <p>{`This API call will return information about the libraries you have stored in CC Libraries:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"total_count\": 2,\n  \"libraries\": [\n    /* Your libraries here */\n  ],\n  \"_links\": {}\n}\n`}</code></pre>\n    <p>{`By starting with this basic Node.js script, you'll have an idea of what's required to make `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` requests to the CC Libraries API. From there, you can play with the script to make `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` requests to different endpoints from Node.js, or translate these concepts to your environment of choice, with Node.js server frameworks like Express and beyond.`}</p>\n    <h2 {...{\n      \"id\": \"before-you-start\"\n    }}>{`Before you start`}</h2>\n    <h3 {...{\n      \"id\": \"technology-used\"\n    }}>{`Technology Used`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Node.js`}</li>\n      <li parentName=\"ul\">{`npm`}</li>\n      <li parentName=\"ul\">{`Axios`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h3>\n    <p><strong parentName=\"p\">{`Tutorials`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./how-to-get-your-developer-credentials.md\"\n        }}>{`How to get your developer credentials`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tutorials/how-to-get-access-tokens-with-oauth.md\"\n        }}>{`How to get access tokens with OAuth`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Assets`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`At least one CC Library associated with your Adobe ID.`}</li>\n      <li parentName=\"ul\">{`A terminal application for a UNIX-based system (like macOS, Linux, or Windows Subsystem for Linux)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"development-steps\"\n    }}>{`Development Steps`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Info`}</strong>{`\nComplete code for this plugin can be found `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/cc-libraries-api/code-samples/tree/master/quick-start-nodejs\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`on GitHub`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"1-set-up-your-environment-variables\"\n    }}>{`1. Set up your environment variables`}</h3>\n    <p>{`The Node.js script we create here will read environment variables from a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file, so start by creating a file named `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`touch .env\necho .env >> .gitignore # Don't track your .env file in version control\n`}</code></pre>\n    <p>{`In our `}<a parentName=\"p\" {...{\n        \"href\": \"./how-to-get-your-developer-credentials.md\"\n      }}>{`How to get your developer credentials`}</a>{` tutorial, we showed you how to get your API key from the Adobe Developer Console and user access token from the OAuth 2.0 Playground. You can take both of those values and add them to their respective variables in the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file as seen below. Don't include the angle brackets (`}<inlineCode parentName=\"p\">{`< >`}</inlineCode>{`) in your values:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`API_KEY=<CLIENT_ID_HERE>\nACCESS_TOKEN=<ACCESS_TOKEN_HERE>\n`}</code></pre>\n    <p>{`Note that we are storing the access token as a value in an `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file for convience in getting started making API calls. Production integrations must support a proper `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.io/authentication/auth-methods.html#!AdobeDocs/adobeio-auth/master/OAuth/OAuth.md\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`OAuth workflow`}</a>{` and should never store user access tokens this way. Always avoid sharing your token or committing it to a public repo.`}</p>\n    <h3 {...{\n      \"id\": \"2-install-dependencies\"\n    }}>{`2. Install dependencies`}</h3>\n    <p>{`First, we'll create an npm package and install dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm init -y\nnpm install --save axios dotenv\n`}</code></pre>\n    <p>{`We'll use `}<inlineCode parentName=\"p\">{`axios`}</inlineCode>{` to make HTTP requests, and `}<inlineCode parentName=\"p\">{`dotenv`}</inlineCode>{` to read in our environement variables from the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file we created in the previous step.`}</p>\n    <h3 {...{\n      \"id\": \"3-create-your-javascript-file-and-import-your-dependencies\"\n    }}>{`3. Create your JavaScript file and import your dependencies`}</h3>\n    <p>{`Now we create the only JavaScript file we'll need for this basic script example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`touch index.js\n`}</code></pre>\n    <p>{`At the top of this file, we import the two packages we installed in the previous step:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`require(\"dotenv\").config(); // Read in your .env variables\nconst axios = require(\"axios\");\n`}</code></pre>\n    <p>{`Your environment variables will now be available on Node.js's `}<inlineCode parentName=\"p\">{`process.env`}</inlineCode>{` object.`}</p>\n    <h3 {...{\n      \"id\": \"4-set-up-your-request-headers\"\n    }}>{`4. Set up your request headers`}</h3>\n    <p>{`We'll start by focusing on constructing the core API call.`}</p>\n    <p>{`First, we need to set up our headers:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const options = {\n  headers: {\n    \"x-api-key\": process.env.API_KEY,\n    Authorization: \\`Bearer \\${process.env.ACCESS_TOKEN}\\`,\n  },\n};\n`}</code></pre>\n    <p>{`As you can see, we've created an `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` object with a `}<inlineCode parentName=\"p\">{`headers`}</inlineCode>{` property. The `}<inlineCode parentName=\"p\">{`headers`}</inlineCode>{` property contains key/value fields for our API key and user access token (which are read from Node.js's `}<inlineCode parentName=\"p\">{`process.env`}</inlineCode>{` object).`}</p>\n    <p>{`The structure of these options is defined by the `}<inlineCode parentName=\"p\">{`axios`}</inlineCode>{` module, which we'll use in the next step to set up our HTTP request.`}</p>\n    <h3 {...{\n      \"id\": \"5-set-up-your-api-call\"\n    }}>{`5. Set up your API call`}</h3>\n    <p>{`Now all we need to do is write the request itself. We'll do this with the `}<inlineCode parentName=\"p\">{`axios`}</inlineCode>{` module:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const response = await axios.get(\n  \"https://cc-libraries.adobe.io/api/v1/libraries/\",\n  options\n);\n`}</code></pre>\n    <p>{`Here, we're making a GET request, passing in the endpoint (`}<inlineCode parentName=\"p\">{`https://cc-libraries.adobe.io/api/v1/libraries/`}</inlineCode>{`), and the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` object containing our headers.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`axios`}</inlineCode>{` module returns promises, so we can opt for async/await syntax, or then/catch chains. Either is fine, but since we've opted for async/await, we'll need to wrap this call in an `}<inlineCode parentName=\"p\">{`async`}</inlineCode>{` function in the next step (unless you're using Node.js 14.3.0 or above, where top-level `}<inlineCode parentName=\"p\">{`await`}</inlineCode>{` is supported).`}</p>\n    <h3 {...{\n      \"id\": \"6-bring-it-all-together\"\n    }}>{`6. Bring it all together`}</h3>\n    <p>{`This is the last step, where we'll embellish on the basic setup we've done so far:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Wrap everything in a self-invoking async function\n(async () => {\n  // Set up your request headers\n  const options = {\n    headers: {\n      \"x-api-key\": process.env.API_KEY,\n      Authorization: \\`Bearer \\${process.env.ACCESS_TOKEN}\\`,\n    },\n  };\n\n  try {\n    // Make your API call\n    const response = await axios.get(baseURL, options);\n    console.log(response.data);\n  } catch (error) {\n    // Catch errors\n    console.log(error.toJSON());\n  }\n})();\n`}</code></pre>\n    <p>{`A success response will look something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"total_count\": 2,\n  \"libraries\": [\n    /* Your libraries here */\n  ],\n  \"_links\": {}\n}\n`}</code></pre>\n    <p>{`Always check `}<a parentName=\"p\" {...{\n        \"href\": \"https://cc-libraries-api.github.io/open-api/\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`the references`}</a>{` for the full details on any request or response.`}</p>\n    <h2 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./quick-start-curl.md\"\n        }}>{`Quick Start: cURL`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./getting-data/nodejs.md\"\n        }}>{`Getting data: Node.js`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"other-resources\"\n    }}>{`Other Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cc-libraries-api.github.io/open-api/\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`Endpoint references`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}